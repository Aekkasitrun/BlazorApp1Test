@using BudgetBook.Data
@inject BudgetBookService budgetBookService

@if (allEntries == null)
{
    <text>Loading...</text>
}
else
{

    @foreach (Todo todo in allEntries)
    {
        <div class="d-flex justify-content-center ">
            <div class="card w-100 mb-1">
                <div class="card-body">
                    <div class="d-flex justify-content-between form-check">
                        <div class="mr-auto p-2">
                            <CheckButton CheckBoxEntry="@todo" UpdateCheckBoxEntry="ReloadEntry" />
                            @todo.Description
                        </div>
                        <div class="p-2">
                            <UpdateButton EditEntry="@todo" UpdateEntry="ReloadEntry" />
                            <DeleteButton Entry="@todo" DeleteEntry="ReloadEntry" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        

    }
    <DeleteAllButton DeleteAllEntries="ReloadEntry"/>
    
}


@code {
    List<Todo> allEntries = new List<Todo>();
    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        allEntries = await budgetBookService.GetAllEntries();
    }
    private async void ReloadEntry()
    {
        allEntries = await budgetBookService.GetAllEntries();
    }
}
